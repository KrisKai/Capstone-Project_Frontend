{"version":3,"file":"static/js/530.6e691e5b.chunk.js","mappings":"0XAeMA,EAAU,CACd,CACEC,GAAI,WACJC,MAAO,YACPC,SAAU,IACVC,OAAQ,SAACC,GAAK,OAAKA,EAAMC,eAAe,QAAQ,EAChDC,SAAS,GAEX,CACEN,GAAI,kBACJC,MAAO,mBACPC,SAAU,IACVK,MAAO,SACPJ,OAAQ,SAACC,GAAK,OAAKA,EAAMC,eAAe,QAAQ,GAElD,CACEL,GAAI,WACJC,MAAO,WACPC,SAAU,IACVK,MAAO,SACPJ,OAAQ,SAACC,GAAK,OAAKA,EAAMC,eAAe,QAAQ,IAIrC,SAASG,EAAwBC,GAC9C,IAAIC,GAAWC,EAAAA,EAAAA,MACfC,GAAwCC,EAAAA,EAAAA,UAAS,CAC/CC,WAAY,GACZC,UAAW,IACXC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHKM,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAI5BI,GAAWC,EAAAA,EAAAA,MAAXD,OACRE,GAA4BT,EAAAA,EAAAA,UAAS,CACnCU,UAAW,EACXC,SAAU,GACVC,SAAU,GACVC,WAAYjB,EAAMkB,SAASD,WAC3BN,OAAQA,IACRQ,GAAAX,EAAAA,EAAAA,GAAAK,EAAA,GANKO,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAOlBG,EAAWb,EAAaJ,WACxBkB,EAAed,EAAaH,UAsB5BkB,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOtC,GAAE,IAAAuC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGpBC,EAAAA,GAAAA,OAAmB5C,GAAM,IAAI,KAAD,EAElC6C,EAAAA,GAAAA,QAAc,kCAGRN,GAASO,EAAAA,EAAAA,GAAA,GAAQjB,GACvBC,EAAUS,GAAWE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAGrBO,QAAQC,IAAI,uBAAsBR,EAAAM,IACL,KAAzBN,EAAAM,GAAMG,SAASC,SACjBC,aAAaC,WAAW,gBACxB3C,EAAS,gBACV,yBAAA+B,EAAAa,OAAA,GAAAhB,EAAA,kBAEJ,gBAlBiBiB,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,KAgClB,OARAC,EAAAA,EAAAA,YAAU,WACkB,SAAAC,IAGzB,OAHyBA,GAAAxB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1B,SAAAuB,IAAA,IAAAV,EAAA,OAAAd,EAAAA,EAAAA,KAAAI,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACyBC,EAAAA,GAAAA,OAAmBf,GAAQ,KAAD,EAA3CqB,EAAQW,EAAAC,KACd3C,EAAgB+B,GAAU,wBAAAW,EAAAP,OAAA,GAAAM,EAAA,MAC3BJ,MAAA,KAAAC,UAAA,EAJc,WACWE,EAAAH,MAAC,KAADC,UAAA,CAI1BM,EACF,GAAG,CAAClC,KAGFmC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACG,EAAAA,EAAK,CAACC,GAAI,CAAEC,MAAO,OAAQC,SAAU,UAAWJ,SAAA,EAC/CK,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,WAAS,EAACL,GAAI,CAAEM,GAAI,EAAGC,GAAI,GAAIT,UACnCK,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACI,GAAI,EAAGR,GAAI,CAAES,GAAI,GAAIX,UACzBK,EAAAA,EAAAA,KAAA,MAAAL,SAAKzD,EAAMkB,SAASmD,oBAGxBP,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACX,GAAI,CAAEM,GAAI,EAAGC,GAAI,GAAKK,UAAU,WAErCT,EAAAA,EAAAA,KAACU,EAAAA,EAAc,CAAAf,UACbF,EAAAA,EAAAA,MAACkB,EAAAA,EAAK,CAACC,cAAY,EAAC,aAAW,eAAcjB,SAAA,EAC3CK,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CAAAlB,UACRF,EAAAA,EAAAA,MAACqB,EAAAA,EAAQ,CAAAnB,SAAA,CACNnE,EAAQuF,KAAI,SAACC,GAAM,OAClBhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAERjF,MAAOgF,EAAOhF,MACdkF,MAAO,CAAEvF,SAAUqF,EAAOrF,UAAWgE,SAEpCqB,EAAOtF,OAJHsF,EAAOvF,GAKF,KAEduE,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAYjF,MAAM,SAAQ2D,SAAC,kBAAtB,cAKnBK,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CAAAxB,SACPnC,EAASuD,KAAI,SAACK,GACb,OACE3B,EAAAA,EAAAA,MAACqB,EAAAA,EAAQ,CACPO,OAAK,EACLC,KAAK,WACLC,SAAUH,EAAII,OAAO7B,SAAA,CAGpBnE,EAAQuF,KAAI,SAACC,GACZ,IAAMnF,EAAQuF,EAAIJ,EAAOvF,IACzB,OACEuE,EAAAA,EAAAA,KAAAN,EAAAA,SAAA,CAAAC,SACGqB,EAAOjF,SACNiE,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAERjF,MAAOgF,EAAOhF,MACdyF,QAAS,kBAzDnBhG,EAyDkC2F,EAAII,YAxDtDrF,EAAS,uBAADuF,OAAwBjG,IADlC,IAAkBA,CAyD6C,EAACkE,SAEnCqB,EAAOpF,QAA2B,kBAAVC,EACrBmF,EAAOpF,OAAOC,GACdA,GANCmF,EAAOvF,KASduE,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAiBjF,MAAOgF,EAAOhF,MAAM2D,SAC5CqB,EAAOpF,QAA2B,kBAAVC,EACrBmF,EAAOpF,OAAOC,GACdA,GAHUmF,EAAOvF,KAQ/B,KACAgE,EAAAA,EAAAA,MAACwB,EAAAA,EAAS,CAAYjF,MAAM,SAAQ2D,SAAA,EAClCK,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,QAAQ,WACR/F,MAAOuF,EAAII,OACXC,QAAS,SAACI,GAAC,OAtGXpG,EAsG6BoG,EAAEC,OAAOjG,WApG1DM,EAAS,yBAADuF,OAA0B7E,EAAM,KAAA6E,OAAIjG,IAFzB,IAACA,CAsG4C,EAC5CsG,MAAM,UAASpC,SAChB,UAGDK,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,QAAQ,WACR/F,MAAOuF,EAAII,OACXC,QAAS,SAACI,GAAC,OAAKnE,EAAamE,EAAEC,OAAOjG,MAAM,EAC5CkG,MAAM,QAAOpC,SACd,aAdY,UA1BVyB,EAAII,OA8Cf,YAINxB,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CACdC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAO1E,EACP2E,YAAa9E,EAAOL,SACpBoF,KAAM/E,EAAON,UACbsF,aA/IiB,SAACC,EAAOC,GAC/BjF,GAASgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACNjB,GAAM,IACTN,UAAWwF,IAEf,EA2IQC,oBAzIwB,SAACF,GAC/BhF,GAASgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACNjB,GAAM,IACTN,UAAW,EACXC,UAAWsF,EAAMT,OAAOjG,QAE5B,QAsIImE,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,WAAS,EAACL,GAAI,CAAEM,GAAI,OAGhC,CCvMe,SAASuC,IACtB,IAAIvG,GAAWC,EAAAA,EAAAA,MACfC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA7CsG,EAAYlG,EAAA,GAAEmG,EAAenG,EAAA,GAC5BI,GAAWC,EAAAA,EAAAA,MAAXD,OAqBR,OAXAsC,EAAAA,EAAAA,YAAU,WACkB,SAAAC,IAMzB,OANyBA,GAAAxB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1B,SAAAC,IAAA,IAAAX,EAAA,OAAAS,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACyByE,EAAAA,GAAAA,OAAuB,CAC5C7F,UAAW,EACXC,SAAU,KACT,KAAD,EAHIG,EAAQc,EAAAqB,KAIdqD,EAAgBxF,EAAS0F,gBAAgB,wBAAA5E,EAAAa,OAAA,GAAAhB,EAAA,MAC1CkB,MAAA,KAAAC,UAAA,EAPc,WACWE,EAAAH,MAAC,KAADC,UAAA,CAO1BM,EACF,GAAG,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGgD,EAAa5B,KAAI,SAAC3D,GAAQ,OACzB4C,EAAAA,EAAAA,KAAC/D,EAAuB,CAACmB,SAAUA,GAAY,KAEjDqC,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,WAAS,EAACL,GAAI,CAAEM,GAAI,GAAIR,SAAA,EAC5BK,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACI,GAAI,EAAEV,UACVK,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,WAAWH,QAtBnC,WACEtF,EAAS,qBAADuF,OAAsB7E,GAChC,EAoBqD8C,SAAE,wBAIjDK,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACI,GAAI,EAAGI,UAAU,QAAOd,UAC5BK,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAAQ,YAAYH,QA/BpC,WACEtF,EAAS,yBAADuF,OAA0B7E,GACpC,EA6BwD8C,SAAC,kBAO3D,C","sources":["components/trip-item/tripItemTable.js","pages/admin/tripManagement/item/tripItemList.jsx"],"sourcesContent":["import { Box, Button, TextField } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { tripItemApi } from \"api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"itemName\",\r\n    label: \"Item Name\",\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n    onclick: true,\r\n  },\r\n  {\r\n    id: \"itemDescription\",\r\n    label: \"Item Description\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"quantity\",\r\n    label: \"Quantity\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n];\r\n\r\nexport default function StickyHeadTableTripItem(props) {\r\n  let navigate = useNavigate();\r\n  const [allTripItems, setAllTripItems] = useState({\r\n    listOfItem: [],\r\n    numOfItem: 0,\r\n  });\r\n  const { tripId } = useParams();\r\n  const [filter, setFilter] = useState({\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n    itemName: \"\",\r\n    categoryId: props.category.categoryId,\r\n    tripId: tripId\r\n  });\r\n  const itemList = allTripItems.listOfItem;\r\n  const numberOfItem = allTripItems.numOfItem;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setFilter({\r\n      ...filter,\r\n      pageIndex: newPage,\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setFilter({\r\n      ...filter,\r\n      pageIndex: 0,\r\n      pageSize: +event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    // update\r\n    navigate(`/admin/tripItemUpdate/${tripId}/${id}`);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      // Remove trip API\r\n      await tripItemApi.delete(id || \"\");\r\n\r\n      toast.success(\"Remove trip item successfully!\");\r\n\r\n      // Trigger to re-fetch student list with current filter\r\n      const newFilter = { ...filter };\r\n      setFilter(newFilter);\r\n    } catch (error) {\r\n      // Toast error\r\n      console.log(\"Failed to fetch trip\", error);\r\n      if (error.response.status == 401) {\r\n        localStorage.removeItem(\"access_token\");\r\n        navigate(\"/auth/login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function gotoView(id) {\r\n    navigate(`/admin/tripItemView/${id}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getAllItems() {\r\n      const response = await tripItemApi.getAll(filter);\r\n      setAllTripItems(response);\r\n    }\r\n    getAllItems();\r\n  }, [filter]);\r\n\r\n  return (\r\n    <>\r\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n        <Grid container sx={{ mt: 1, mb: 1 }}>\r\n          <Grid xs={6} sx={{ pl: 1 }}>\r\n            <h2>{props.category.categoryName}</h2>\r\n          </Grid>\r\n        </Grid>\r\n        <Box sx={{ mt: 1, mb: 1 }} textAlign=\"right\"></Box>\r\n\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell key=\"edit\" align=\"center\">\r\n                  Edit || Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {itemList.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={row.itemId}\r\n                    key={row.itemId}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <>\r\n                          {column.onclick ? (\r\n                            <TableCell\r\n                              key={column.id}\r\n                              align={column.align}\r\n                              onClick={() => gotoView(row.itemId)}\r\n                            >\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          ) : (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    })}\r\n                    <TableCell key=\"edit\" align=\"center\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        value={row.itemId}\r\n                        onClick={(e) => handleUpdate(e.target.value)}\r\n                        color=\"primary\"\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        value={row.itemId}\r\n                        onClick={(e) => handleDelete(e.target.value)}\r\n                        color=\"error\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={numberOfItem}\r\n          rowsPerPage={filter.pageSize}\r\n          page={filter.pageIndex}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Grid container sx={{ mt: 2 }}></Grid>\r\n    </>\r\n  );\r\n}\r\n","import { Button } from \"@mui/material\";\r\nimport { itemCategoryApi, tripItemApi } from \"api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport StickyHeadTableTripItem from \"components/trip-item/tripItemTable\";\r\n\r\nexport default function TripItem() {\r\n  let navigate = useNavigate();\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const { tripId } = useParams();\r\n\r\n  function gotoCreate() {\r\n    navigate(`/admin/tripItemCreate/${tripId}`);\r\n  }\r\n\r\n  function gotoList() {\r\n    navigate(`/admin/tripDetail/${tripId}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getAllItems() {\r\n      const category = await itemCategoryApi.getAll({\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n      });\r\n      setCategoryList(category.listOfCategory);\r\n    }\r\n    getAllItems();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {categoryList.map((category) => (\r\n        <StickyHeadTableTripItem category={category} />\r\n      ))}\r\n      <Grid container sx={{ mt: 2 }}>\r\n        <Grid xs={6}>\r\n          <Button variant=\"outlined\" onClick={gotoList} >\r\n            Return to Detail\r\n          </Button>\r\n        </Grid>\r\n        <Grid xs={6} textAlign=\"right\">\r\n          <Button variant=\"contained\" onClick={gotoCreate}>\r\n            Create\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"],"names":["columns","id","label","minWidth","format","value","toLocaleString","onclick","align","StickyHeadTableTripItem","props","navigate","useNavigate","_useState","useState","listOfItem","numOfItem","_useState2","_slicedToArray","allTripItems","setAllTripItems","tripId","useParams","_useState3","pageIndex","pageSize","itemName","categoryId","category","_useState4","filter","setFilter","itemList","numberOfItem","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newFilter","wrap","_context","prev","next","tripItemApi","toast","_objectSpread","t0","console","log","response","status","localStorage","removeItem","stop","_x","apply","arguments","useEffect","_getAllItems","_callee2","_context2","sent","getAllItems","_jsxs","_Fragment","children","Paper","sx","width","overflow","_jsx","Grid","container","mt","mb","xs","pl","categoryName","Box","textAlign","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","row","hover","role","tabIndex","itemId","onClick","concat","Button","variant","e","target","color","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","page","onPageChange","event","newPage","onRowsPerPageChange","TripItem","categoryList","setCategoryList","itemCategoryApi","listOfCategory"],"sourceRoot":""}