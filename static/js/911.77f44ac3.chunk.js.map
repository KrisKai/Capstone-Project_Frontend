{"version":3,"file":"static/js/911.77f44ac3.chunk.js","mappings":"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","sources":["pages/admin/userManagement/userList.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Box, Button, TextField } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { userApi } from \"api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAppSelector } from \"redux/hooks\";\r\nimport { selectCurrentUser } from \"redux/modules/admin/authenticate/authSlice\";\r\n\r\nconst columns = [\r\n  { id: \"username\", label: \"UserName\", minWidth: 100, onclick: true },\r\n  {\r\n    id: \"fullname\",\r\n    label: \"Full Name\",\r\n    minWidth: 150,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"role\",\r\n    label: \"Role\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"email\",\r\n    label: \"Email\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"activeStatus\",\r\n    label: \"Active Status\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n];\r\n\r\nexport default function StickyHeadTableUser() {\r\n  let navigate = useNavigate();\r\n  const [open, setOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState(\"\");\r\n  const [filter, setFilter] = useState({\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n    userName: \"\",\r\n  });\r\n  const [allUsers, setAllUsers] = useState({\r\n    listOfUser: [],\r\n    numOfUser: 0,\r\n  });\r\n  const userList = allUsers.listOfUser;\r\n  const numOfUser = allUsers.numOfUser;\r\n  const currentUser = useAppSelector(selectCurrentUser);\r\n  const isAdmin = Boolean(currentUser.role === \"Admin\");\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const onSearchChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const handleClickOpen = (e) => {\r\n    setOpen(true);\r\n    setDeleteId(e);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if ((event.type && event.type === \"click\") || !event) {\r\n      setFilter({\r\n        ...filter,\r\n        userName: search,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setFilter({\r\n      ...filter,\r\n      pageIndex: newPage,\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setFilter({\r\n      ...filter,\r\n      pageIndex: 0,\r\n      pageSize: +event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    // update\r\n    navigate(`/admin/userUpdate/${id}`);\r\n  };\r\n\r\n  const handleReset = async (id) => {\r\n    const response = await userApi.reset(id);\r\n    if (response > 0) {\r\n      toast.success(\"Change Password To Qwe1234!\");\r\n    } else {\r\n      toast.error(\"Reset Password Failed!\");\r\n    }\r\n  };\r\n\r\n  const handleChangeStatus = async (id, status) => {\r\n    let response = await userApi.changeStatus({\r\n      userId: id,\r\n      ActiveStatus: status,\r\n    });\r\n    switch (response.Code) {\r\n      case \"G001\":\r\n        return toast.error(response.Message);\r\n      case \"U001\":\r\n        return toast.error(response.Message);\r\n      case \"I001\":\r\n        return toast.error(response.Message);\r\n      case \"V001\":\r\n        return toast.error(response.Message);\r\n      default: {\r\n        if (response > 0) {\r\n          toast.success(\"Change Status Successed!\");\r\n          window.location.reload(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      // Remove user API\r\n      await userApi.delete(deleteId || \"\");\r\n      toast.success(\"Remove user successfully!\");\r\n\r\n      // Trigger to re-fetch student list with current filter\r\n      const newFilter = { ...filter };\r\n      setFilter(newFilter);\r\n      setOpen(false);\r\n    } catch (error) {\r\n      // Toast error\r\n      console.log(\"Failed to fetch user\", error);\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"access_token\");\r\n        navigate(\"/auth/login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function gotoCreate() {\r\n    navigate(\"/admin/userCreate\");\r\n  }\r\n\r\n  function gotoView(id) {\r\n    navigate(`/admin/userView/${id}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getAllUsers() {\r\n      const response = await userApi.getAll(filter);\r\n      setAllUsers(response);\r\n    }\r\n    getAllUsers();\r\n  }, [filter]);\r\n\r\n  return (\r\n    <>\r\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n        <Box sx={{ mt: 1, mb: 1 }} textAlign=\"right\">\r\n          <TextField\r\n            id=\"search\"\r\n            type=\"search\"\r\n            label=\"Search\"\r\n            value={search}\r\n            onKeyDown={handleChange}\r\n            onChange={onSearchChange}\r\n            sx={{ width: 400 }}\r\n          />\r\n          <Button variant=\"outlined\" onClick={handleChange} sx={{ height: 42 }}>\r\n            Search\r\n          </Button>\r\n        </Box>\r\n\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                {isAdmin && (\r\n                  <>\r\n                    <TableCell key=\"status\" align=\"center\">\r\n                      Change Status\r\n                    </TableCell>\r\n                    <TableCell key=\"reset\" align=\"center\">\r\n                      Reset Password\r\n                    </TableCell>\r\n                  </>\r\n                )}\r\n                <TableCell key=\"edit\" align=\"center\">\r\n                  Edit || Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {userList?.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={row.userId}\r\n                    key={row.userId}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n\r\n                      if (column.onclick) {\r\n                        return (\r\n                          <TableCell\r\n                            key={column.id}\r\n                            align={column.align}\r\n                            style={{ textDecoration: \"underline\" }}\r\n                            onClick={() => gotoView(row.userId)}\r\n                          >\r\n                            {column.format && typeof value === \"number\"\r\n                              ? column.format(value)\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      }\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    {isAdmin && (\r\n                      <>\r\n                        <TableCell key=\"status\" align=\"center\">\r\n                          {row.ActiveStatus !== \"ACTIVE\" && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              value={row.userId}\r\n                              onClick={(e) =>\r\n                                handleChangeStatus(e.target.value, \"ACTIVE\")\r\n                              }\r\n                              color=\"primary\"\r\n                            >\r\n                              Active\r\n                            </Button>\r\n                          )}\r\n                          {row.ActiveStatus !== \"INACTIVE\" && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              value={row.userId}\r\n                              onClick={(e) =>\r\n                                handleChangeStatus(e.target.value, \"INACTIVE\")\r\n                              }\r\n                              color=\"warning\"\r\n                            >\r\n                              Inactive\r\n                            </Button>\r\n                          )}\r\n                          {row.ActiveStatus !== \"BANNED\" && (\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              value={row.userId}\r\n                              onClick={(e) =>\r\n                                handleChangeStatus(e.target.value, \"BANNED\")\r\n                              }\r\n                              color=\"error\"\r\n                            >\r\n                              Banned\r\n                            </Button>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell key=\"reset\" align=\"center\">\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            value={row.userId}\r\n                            onClick={(e) => handleReset(e.target.value)}\r\n                            color=\"success\"\r\n                          >\r\n                            Reset Password\r\n                          </Button>\r\n                        </TableCell>\r\n                      </>\r\n                    )}\r\n                    <TableCell key=\"edit\" align=\"center\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        value={row.userId}\r\n                        onClick={(e) => handleUpdate(e.target.value)}\r\n                        color=\"primary\"\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        value={row.userId}\r\n                        onClick={(e) => handleClickOpen(e.target.value)}\r\n                        color=\"error\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={numOfUser}\r\n          rowsPerPage={filter.pageSize}\r\n          page={filter.pageIndex}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Box sx={{ mt: 2 }} textAlign=\"right\">\r\n        <Button variant=\"contained\" onClick={gotoCreate}>\r\n          Create\r\n        </Button>\r\n      </Box>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Do you want to delete this user?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={handleDelete}\r\n            autoFocus\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n"],"names":["columns","id","label","minWidth","onclick","align","StickyHeadTableUser","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","deleteId","setDeleteId","_useState5","pageIndex","pageSize","userName","_useState6","filter","setFilter","_useState7","listOfUser","numOfUser","_useState8","allUsers","setAllUsers","userList","currentUser","useAppSelector","selectCurrentUser","isAdmin","Boolean","role","_useState9","_useState10","search","setSearch","handleClose","handleChange","event","type","_objectSpread","handleReset","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","userApi","sent","toast","stop","_x","apply","arguments","handleChangeStatus","_ref2","_callee2","status","response","_context2","userId","ActiveStatus","t0","Code","abrupt","Message","window","location","reload","_x2","_x3","handleDelete","_ref3","_callee3","newFilter","_context3","console","log","localStorage","removeItem","useEffect","_getAllUsers","_callee4","_context4","getAllUsers","_jsxs","_Fragment","children","Paper","sx","width","overflow","Box","mt","mb","textAlign","_jsx","TextField","value","onKeyDown","onChange","e","target","Button","variant","onClick","height","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","row","hover","tabIndex","textDecoration","concat","format","color","handleClickOpen","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange","Dialog","onClose","DialogTitle","DialogActions","autoFocus"],"sourceRoot":""}