{"version":3,"file":"static/js/364.62872c00.chunk.js","mappings":"qaAkBMA,EAAU,CACd,CAAEC,GAAI,WAAYC,MAAO,YAAaC,SAAU,IAAKC,SAAS,GAC9D,CACEH,GAAI,WACJC,MAAO,WACPC,SAAU,IACVE,MAAO,SACPC,OAAQ,SAACC,GAAK,OAAKA,EAAMC,eAAe,QAAQ,GAElD,CACEP,GAAI,QACJC,MAAO,QACPC,SAAU,IACVE,MAAO,UAET,CACEJ,GAAI,QACJC,MAAO,QACPC,SAAU,IACVE,MAAO,UAET,CACEJ,GAAI,aACJC,MAAO,OACPC,SAAU,IACVE,MAAO,UAET,CACEJ,GAAI,SACJC,MAAO,SACPC,SAAU,IACVE,MAAO,WAII,SAASI,IACtB,IAAIC,GAAWC,EAAAA,EAAAA,MACfC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAoCL,EAAAA,EAAAA,UAAS,CAC3CM,aAAc,GACdC,YAAa,IACbC,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAHKI,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAIxBG,GAAWC,EAAAA,EAAAA,MAAXD,OACRE,GAAgCb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAwBjB,EAAAA,EAAAA,WAAS,GAAMkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BrB,EAAAA,EAAAA,UAAS,CACnCsB,UAAW,EACXC,SAAU,GACVZ,OAAQA,EACRa,WAAY,KACZC,GAAAvB,EAAAA,EAAAA,GAAAmB,EAAA,GALKK,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAMlBG,EAAanB,EAAWH,aACxBC,EAAcE,EAAWF,YAOzBsB,EAAc,WAClBT,GAAQ,EACV,EAuCMU,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO/C,GAAE,IAAAgD,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGTC,EAAAA,GAAAA,SAAuBrD,GAAM,IAAI,KAAD,EAA7CgD,EAAIE,EAAAI,KAAAJ,EAAAK,GACFP,EAAKQ,KAAIN,EAAAE,KACV,SADUF,EAAAK,GACJ,EAEN,SAFML,EAAAK,GAEA,iBADuB,cAAAL,EAAAO,OAAA,SAEzBC,EAAAA,GAAAA,MAAYV,EAAKW,UAAQ,OAEhCD,EAAAA,GAAAA,QAAc,2BAA2B,QAAAR,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAI7CW,QAAQC,IAAI,8BAA6BZ,EAAAU,IACZ,KAAzBV,EAAAU,GAAMG,SAASC,SACjBC,aAAaC,WAAW,gBACxBzD,EAAS,gBACV,yBAAAyC,EAAAiB,OAAA,GAAApB,EAAA,mBAEJ,gBApBmBqB,GAAA,OAAAzB,EAAA0B,MAAA,KAAAC,UAAA,KAsBdC,EAAY,eAAAC,GAAA5B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA2B,IAAA,IAAAzB,EAAA0B,EAAA,OAAA7B,EAAAA,EAAAA,KAAAI,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAGEC,EAAAA,GAAAA,OAAqB1B,GAAY,IAAI,KAAD,EAAjDqB,EAAI2B,EAAArB,KAAAqB,EAAApB,GACFP,EAAKQ,KAAImB,EAAAvB,KACV,SADUuB,EAAApB,GACJ,EAEN,SAFMoB,EAAApB,GAEA,iBADuB,cAAAoB,EAAAlB,OAAA,SAEzBC,EAAAA,GAAAA,MAAYV,EAAKW,UAAQ,OAEhCD,EAAAA,GAAAA,QAAc,oCAGRgB,GAASE,EAAAA,EAAAA,GAAA,GAAQtC,GACvBC,EAAUmC,GACV1C,GAAQ,GACRJ,EAAY,MAAM,QAAA+C,EAAAvB,KAAA,iBAAAuB,EAAAxB,KAAA,GAAAwB,EAAAf,GAAAe,EAAA,SAItBd,QAAQC,IAAI,8BAA6Ba,EAAAf,IACZ,KAAzBe,EAAAf,GAAMG,SAASC,SACjBC,aAAaC,WAAW,gBACxBzD,EAAS,gBACV,yBAAAkE,EAAAR,OAAA,GAAAM,EAAA,mBAEJ,kBA1BiB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAgDlB,OARAO,EAAAA,EAAAA,YAAU,WACoB,SAAAC,IAG3B,OAH2BA,GAAAlC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA5B,SAAAiC,IAAA,IAAAhB,EAAA,OAAAlB,EAAAA,EAAAA,KAAAI,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EACyBC,EAAAA,GAAAA,OAAqBf,GAAQ,KAAD,EAA7CyB,EAAQiB,EAAA1B,KACdhC,EAAcyC,GAAU,wBAAAiB,EAAAb,OAAA,GAAAY,EAAA,MACzBV,MAAA,KAAAC,UAAA,EAJc,WACaQ,EAAAT,MAAC,KAADC,UAAA,CAI5BW,EACF,GAAG,CAAC3C,KAGF4C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACG,EAAAA,EAAK,CAACC,GAAI,CAAEC,MAAO,OAAQC,SAAU,UAAWJ,SAAA,EAC/CF,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACH,GAAI,CAAEI,GAAI,EAAGC,GAAI,GAAKC,UAAU,QAAOR,SAAA,EAC1CS,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACR9F,GAAG,SACH+F,KAAK,SACL9F,MAAM,SACNK,MAAOS,EACPiF,SA3GW,SAACC,GACpBjF,EAAciF,EAAMC,OAAO5F,OAC3BiC,GAASqC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACNtC,GAAM,IACTF,WAAY6D,EAAMC,OAAO5F,QAE7B,EAsGUgF,GAAI,CAAEC,MAAO,QAEfM,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,QAAQ,WAAWC,QAvHd,SAACJ,GACpBjF,EAAciF,EAAMC,OAAO5F,OAE3BiC,GAASqC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACNtC,GAAM,IACTF,WAAY6D,EAAMC,OAAO5F,QAE7B,EAgH0DgF,GAAI,CAAEgB,OAAQ,IAAKlB,SAAC,eAKxES,EAAAA,EAAAA,KAACU,EAAAA,EAAc,CAAAnB,UACbF,EAAAA,EAAAA,MAACsB,EAAAA,EAAK,CAACC,cAAY,EAAC,aAAW,eAAcrB,SAAA,EAC3CS,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CAAAtB,UACRF,EAAAA,EAAAA,MAACyB,EAAAA,EAAQ,CAAAvB,SAAA,CACNrF,EAAQ6G,KAAI,SAACC,GAAM,OAClBhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAER1G,MAAOyG,EAAOzG,MACd2G,MAAO,CAAE7G,SAAU2G,EAAO3G,UAAWkF,SAEpCyB,EAAO5G,OAJH4G,EAAO7G,GAKF,KAEd6F,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAe1G,MAAM,SAAQgF,SAAC,aAAzB,YAGfS,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAY1G,MAAM,SAAQgF,SAAC,kBAAtB,cAKnBS,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CAAA5B,SACP5C,EAAWoE,KAAI,SAACK,GACf,OACE/B,EAAAA,EAAAA,MAACyB,EAAAA,EAAQ,CACPO,OAAK,EACLC,KAAK,WACLC,SAAUH,EAAII,SAASjC,SAAA,CAGtBrF,EAAQ6G,KAAI,SAACC,GACZ,IAAMvG,EAAQ2G,EAAIJ,EAAO7G,IACzB,OAAI6G,EAAO1G,SAEP0F,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAER1G,MAAOyG,EAAOzG,MACdiG,QAAS,kBAlEjBrG,EAkEgCiH,EAAII,cAjEpD5G,EAAS,yBAAD6G,OAA0BtH,IADpC,IAAkBA,CAkE6C,EAACoF,SAErCyB,EAAOxG,QAA2B,kBAAVC,EACrBuG,EAAOxG,OAAOC,GACdA,GANCuG,EAAO7G,KAWhB6F,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAiB1G,MAAOyG,EAAOzG,MAAMgF,SAC5CyB,EAAOxG,QAA2B,kBAAVC,EACrBuG,EAAOxG,OAAOC,GACdA,GAHUuG,EAAO7G,GAM3B,KACA6F,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAER1G,MAAM,SAAQgF,SAEQ,MAArB6B,EAAIM,aACH,OAEA1B,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACLC,QAAQ,WACR9F,MAAO2G,EAAII,SACXhB,QAAS,SAACmB,GAAC,OAAK9E,EAAe8E,EAAEtB,OAAO5F,MAAM,EAC9CmH,MAAM,UAASrC,SAChB,uBAGF,WAAAkC,OAdeL,EAAII,YAgBtBnC,EAAAA,EAAAA,MAAC4B,EAAAA,EAAS,CAA8B1G,MAAM,SAAQgF,SAAA,EACpDS,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACLC,QAAQ,WACR9F,MAAO2G,EAAII,SACXhB,QAAS,SAACmB,GAAC,OAtKXxH,EAsK6BwH,EAAEtB,OAAO5F,WApK1DG,EAAS,2BAAD6G,OAA4B/F,EAAM,KAAA+F,OAAItH,IAF3B,IAACA,CAsK4C,EAC5CyH,MAAM,UAASrC,SAChB,UAGDS,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACLC,QAAQ,WACR9F,MAAO2G,EAAII,SACXhB,QAAS,SAACmB,GAAC,OAvNT,SAACA,GACvBxF,GAAQ,GACRJ,EAAY4F,EACd,CAoNsCE,CAAgBF,EAAEtB,OAAO5F,MAAM,EAC/CmH,MAAM,QAAOrC,SACd,aAEQ,QAAAkC,OAhBaL,EAAII,aA1CvBJ,EAAII,SA8Df,YAINxB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAe,CACdC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAO3G,EACP4G,YAAazF,EAAOH,SACpB6F,KAAM1F,EAAOJ,UACb+F,aA/MiB,SAAChC,EAAOiC,GAC/B3F,GAASqC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACNtC,GAAM,IACTJ,UAAWgG,IAEf,EA2MQC,oBAzMwB,SAAClC,GAC/B1D,GAASqC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACNtC,GAAM,IACTJ,UAAW,EACXC,UAAW8D,EAAMC,OAAO5F,QAE5B,QAsMI4E,EAAAA,EAAAA,MAACkD,EAAAA,GAAI,CAACC,WAAS,EAAC/C,GAAI,CAAEI,GAAI,GAAIN,SAAA,EAC5BS,EAAAA,EAAAA,KAACuC,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,EAAEnD,UACfS,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,QAAQ,WAAWC,QA3InC,WACE5F,EAAS,qBAAD6G,OAAsB/F,GAChC,EAyIqD6D,SAAC,wBAIhDS,EAAAA,EAAAA,KAACuC,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,EAAG3C,UAAU,QAAOR,UACjCS,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QApJpC,WACE5F,EAAS,2BAAD6G,OAA4B/F,GACtC,EAkJwD6D,SAAC,iBAKrDF,EAAAA,EAAAA,MAACsD,EAAAA,EAAM,CACLzG,KAAMA,EACN0G,QAAShG,EACT,kBAAgB,qBAChB,mBAAiB,2BAA0B2C,SAAA,EAE3CS,EAAAA,EAAAA,KAAC6C,EAAAA,EAAW,CAAC1I,GAAG,qBAAoBoF,SACjC,wCAEHF,EAAAA,EAAAA,MAACyD,EAAAA,EAAa,CAAAvD,SAAA,EACZS,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAAS5D,EAAY2C,SAAC,YAGlDS,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACLC,QAAQ,YACRqB,MAAM,QACNpB,QAAS9B,EACTqE,WAAS,EAAAxD,SACV,oBAOX,C","sources":["pages/admin/tripManagement/member/tripMemberList.jsx"],"sourcesContent":["import { Box, Button, TextField } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { tripMemberApi } from \"api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst columns = [\r\n  { id: \"nickName\", label: \"Nick Name\", minWidth: 100, onclick: true },\r\n  {\r\n    id: \"fullname\",\r\n    label: \"Fullname\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"email\",\r\n    label: \"Email\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"phone\",\r\n    label: \"Phone\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"memberRole\",\r\n    label: \"Role\",\r\n    minWidth: 130,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"status\",\r\n    label: \"Status\",\r\n    minWidth: 130,\r\n    align: \"center\",\r\n  },\r\n];\r\n\r\nexport default function StickyHeadTableTrip() {\r\n  let navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [allMembers, setAllMembers] = useState({\r\n    listOfMember: [],\r\n    numOfMember: 0,\r\n  });\r\n  const { tripId } = useParams();\r\n  const [deleteId, setDeleteId] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [filter, setFilter] = useState({\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n    tripId: tripId,\r\n    memberName: \"\",\r\n  });\r\n  const memberList = allMembers.listOfMember;\r\n  const numOfMember = allMembers.numOfMember;\r\n\r\n  const handleClickOpen = (e) => {\r\n    setOpen(true);\r\n    setDeleteId(e);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    // call api\r\n    setFilter({\r\n      ...filter,\r\n      memberName: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    setFilter({\r\n      ...filter,\r\n      memberName: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setFilter({\r\n      ...filter,\r\n      pageIndex: newPage,\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setFilter({\r\n      ...filter,\r\n      pageIndex: 0,\r\n      pageSize: +event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    // update\r\n    navigate(`/admin/tripMemberUpdate/${tripId}/${id}`);\r\n  };\r\n\r\n  const handleSendMail = async (id) => {\r\n    try {\r\n      // Remove trip API\r\n      const data = await tripMemberApi.sendMail(id || \"\");\r\n      switch (data.Code) {\r\n        case \"G001\":\r\n          return toast.error(data.Message);\r\n        case \"U001\":\r\n          return toast.error(data.Message);\r\n        default:\r\n          toast.success(\"Send mail successfully!\");\r\n      }\r\n    } catch (error) {\r\n      // Toast error\r\n      console.log(\"Failed to fetch trip member\", error);\r\n      if (error.response.status == 401) {\r\n        localStorage.removeItem(\"access_token\");\r\n        navigate(\"/auth/login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      // Remove trip API\r\n      const data = await tripMemberApi.delete(deleteId || \"\");\r\n      switch (data.Code) {\r\n        case \"G001\":\r\n          return toast.error(data.Message);\r\n        case \"D001\":\r\n          return toast.error(data.Message);\r\n        default:\r\n          toast.success(\"Remove trip member successfully!\");\r\n\r\n          // Trigger to re-fetch student list with current filter\r\n          const newFilter = { ...filter };\r\n          setFilter(newFilter);\r\n          setOpen(false);\r\n          setDeleteId(null);\r\n      }\r\n    } catch (error) {\r\n      // Toast error\r\n      console.log(\"Failed to fetch trip member\", error);\r\n      if (error.response.status == 401) {\r\n        localStorage.removeItem(\"access_token\");\r\n        navigate(\"/auth/login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function gotoCreate() {\r\n    navigate(`/admin/tripMemberCreate/${tripId}`);\r\n  }\r\n\r\n  function gotoList() {\r\n    navigate(`/admin/tripDetail/${tripId}`);\r\n  }\r\n\r\n  function gotoView(id) {\r\n    navigate(`/admin/tripMemberView/${id}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getAllMembers() {\r\n      const response = await tripMemberApi.getAll(filter);\r\n      setAllMembers(response);\r\n    }\r\n    getAllMembers();\r\n  }, [filter]);\r\n\r\n  return (\r\n    <>\r\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n        <Box sx={{ mt: 1, mb: 1 }} textAlign=\"right\">\r\n          <TextField\r\n            id=\"search\"\r\n            type=\"search\"\r\n            label=\"Search\"\r\n            value={searchTerm}\r\n            onChange={handleChange}\r\n            sx={{ width: 400 }}\r\n          />\r\n          <Button variant=\"outlined\" onClick={handleSearch} sx={{ height: 42 }}>\r\n            Search\r\n          </Button>\r\n        </Box>\r\n\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell key=\"confirm\" align=\"center\">\r\n                  Confirmed\r\n                </TableCell>\r\n                <TableCell key=\"edit\" align=\"center\">\r\n                  Edit || Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {memberList.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={row.memberId}\r\n                    key={row.memberId}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      if (column.onclick) {\r\n                        return (\r\n                          <TableCell\r\n                            key={column.id}\r\n                            align={column.align}\r\n                            onClick={() => gotoView(row.memberId)}\r\n                          >\r\n                            {column.format && typeof value === \"number\"\r\n                              ? column.format(value)\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      }\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    <TableCell\r\n                      key={`confirm_${row.memberId}`}\r\n                      align=\"center\"\r\n                    >\r\n                      {row.Confirmation === \"Y\" ? (\r\n                        \"Yes\"\r\n                      ) : (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          value={row.memberId}\r\n                          onClick={(e) => handleSendMail(e.target.value)}\r\n                          color=\"primary\"\r\n                        >\r\n                          Send confirm mail\r\n                        </Button>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell key={`edit_${row.memberId}`} align=\"center\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        value={row.memberId}\r\n                        onClick={(e) => handleUpdate(e.target.value)}\r\n                        color=\"primary\"\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        value={row.memberId}\r\n                        onClick={(e) => handleClickOpen(e.target.value)}\r\n                        color=\"error\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={numOfMember}\r\n          rowsPerPage={filter.pageSize}\r\n          page={filter.pageIndex}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Grid container sx={{ mt: 2 }}>\r\n        <Grid item xs={6}>\r\n          <Button variant=\"outlined\" onClick={gotoList}>\r\n            Return to Detail\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6} textAlign=\"right\">\r\n          <Button variant=\"contained\" onClick={gotoCreate}>\r\n            Create\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Do you want to delete this member?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={handleDelete}\r\n            autoFocus\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n"],"names":["columns","id","label","minWidth","onclick","align","format","value","toLocaleString","StickyHeadTableTrip","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","listOfMember","numOfMember","_useState4","allMembers","setAllMembers","tripId","useParams","_useState5","_useState6","deleteId","setDeleteId","_useState7","_useState8","open","setOpen","_useState9","pageIndex","pageSize","memberName","_useState10","filter","setFilter","memberList","handleClose","handleSendMail","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","tripMemberApi","sent","t0","Code","abrupt","toast","Message","t1","console","log","response","status","localStorage","removeItem","stop","_x","apply","arguments","handleDelete","_ref2","_callee2","newFilter","_context2","_objectSpread","useEffect","_getAllMembers","_callee3","_context3","getAllMembers","_jsxs","_Fragment","children","Paper","sx","width","overflow","Box","mt","mb","textAlign","_jsx","TextField","type","onChange","event","target","Button","variant","onClick","height","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","row","hover","role","tabIndex","memberId","concat","Confirmation","e","color","handleClickOpen","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange","Grid","container","item","xs","Dialog","onClose","DialogTitle","DialogActions","autoFocus"],"sourceRoot":""}