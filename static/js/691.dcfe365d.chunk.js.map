{"version":3,"file":"static/js/691.dcfe365d.chunk.js","mappings":"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","sources":["pages/admin/feedbackManagement/feedbackList.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Box, Button, TextField } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { feedbackApi } from \"api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst columns = [\r\n  { id: \"tripId\", label: \"Trip Id\", minWidth: 100, onclick: true },\r\n  {\r\n    id: \"fullname\",\r\n    label: \"Username\",\r\n    minWidth: 150,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"feedbackDescription\",\r\n    label: \"Feedback\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"rate\",\r\n    label: \"Rate\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"like\",\r\n    label: \"Like\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"dislike\",\r\n    label: \"Dislike\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"locationName\",\r\n    label: \"Location Name\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n  },\r\n];\r\n\r\nexport default function StickyHeadTableFeedback() {\r\n  let navigate = useNavigate();\r\n  const [filter, setFilter] = useState({\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n    feedbackName: \"\",\r\n  });\r\n  const [allFeedbacks, setAllFeedbacks] = useState({\r\n    listOfFeedback: [],\r\n    numOfFeedback: 0,\r\n  });\r\n  const feedbackList = allFeedbacks.listOfFeedback;\r\n  const numOfFeedback = allFeedbacks.numOfFeedback;\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const onSearchChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    if ((event.type && event.type === \"click\") || !event) {\r\n      setFilter({\r\n        ...filter,\r\n        feedbackName: search,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setFilter({\r\n      ...filter,\r\n      pageIndex: newPage,\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setFilter({\r\n      ...filter,\r\n      pageIndex: 0,\r\n      pageSize: +event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      // Remove feedback API\r\n      await feedbackApi.delete(id || \"\");\r\n      toast.success(\"Remove feedback successfully!\");\r\n\r\n      // Trigger to re-fetch student list with current filter\r\n      const newFilter = { ...filter };\r\n      setFilter(newFilter);\r\n    } catch (error) {\r\n      // Toast error\r\n      console.log(\"Failed to fetch feedback\", error);\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(\"access_token\");\r\n        navigate(\"/auth/login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function gotoView(id) {\r\n    navigate(`/admin/feedbackView/${id}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getAllFeedbacks() {\r\n      const response = await feedbackApi.getAll(filter);\r\n      setAllFeedbacks(response);\r\n    }\r\n    getAllFeedbacks();\r\n  }, [filter]);\r\n\r\n  return (\r\n    <>\r\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n        <Box sx={{ mt: 1, mb: 1 }} textAlign=\"right\">\r\n          <TextField\r\n            id=\"search\"\r\n            type=\"search\"\r\n            label=\"Search\"\r\n            value={search}\r\n            onKeyDown={handleChange}\r\n            onChange={onSearchChange}\r\n            sx={{ width: 400 }}\r\n          />\r\n          <Button variant=\"outlined\" onClick={handleChange} sx={{ height: 42 }}>\r\n            Search\r\n          </Button>\r\n        </Box>\r\n\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell key=\"edit\" align=\"center\">\r\n                  Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {feedbackList?.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={row.FeedbackId}\r\n                    key={row.FeedbackId}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <>\r\n                          {column.onclick ? (\r\n                            <TableCell\r\n                              key={column.id}\r\n                              align={column.align}\r\n                              style={{ textDecoration: \"underline\" }}\r\n                              onClick={() => gotoView(row.FeedbackId)}\r\n                            >\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          ) : (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    })}\r\n                    <TableCell key=\"edit\" align=\"center\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        value={row.FeedbackId}\r\n                        onClick={(e) => handleDelete(e.target.value)}\r\n                        color=\"secondary\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={numOfFeedback}\r\n          rowsPerPage={filter.pageSize}\r\n          page={filter.pageIndex}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n"],"names":["columns","id","label","minWidth","onclick","align","StickyHeadTableFeedback","navigate","useNavigate","_useState","useState","pageIndex","pageSize","feedbackName","_useState2","_slicedToArray","filter","setFilter","_useState3","listOfFeedback","numOfFeedback","_useState4","allFeedbacks","setAllFeedbacks","feedbackList","_useState5","_useState6","search","setSearch","handleChange","event","type","_objectSpread","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newFilter","wrap","_context","prev","next","feedbackApi","toast","t0","console","log","response","status","localStorage","removeItem","stop","_x","apply","arguments","useEffect","_getAllFeedbacks","_callee2","_context2","sent","getAllFeedbacks","_jsx","_Fragment","children","_jsxs","Paper","sx","width","overflow","Box","mt","mb","textAlign","TextField","value","onKeyDown","onChange","e","target","Button","variant","onClick","height","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","row","hover","role","tabIndex","FeedbackId","textDecoration","concat","format","color","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange"],"sourceRoot":""}