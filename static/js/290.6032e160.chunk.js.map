{"version":3,"file":"static/js/290.6032e160.chunk.js","mappings":"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","sources":["pages/admin/tripManagement/tripCreate.jsx"],"sourcesContent":["import { Button, FormHelperText } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { tripApi } from \"api\";\r\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\r\nimport { openAlert } from \"redux/modules/menu/menuSlice\";\r\nimport { Formik } from \"formik\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport dayjs, { Dayjs } from 'dayjs';\r\n\r\nexport default function UserCreate() {\r\n  let navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const menu = useAppSelector((state) => state.menu);\r\n  const { errorMsg, open } = menu;\r\n  console.log(dayjs(Date.now()))\r\n\r\n  function gotoList() {\r\n    navigate(\"/admin/tripList\");\r\n    dispatch(openAlert({ errorMsg: \"Create Trip Successed!\", open: true }));\r\n  }\r\n\r\n  const validationSchema = yup.object().shape({\r\n    fldTripName: yup\r\n      .string(\"Enter Trip Name\")\r\n      .required(\"Trip Name is required\"),\r\n    fldTripBudget: yup.number().required(\"Trip Budget is required\"),\r\n    fldTripDescription: yup\r\n      .string(\"Enter Trip Description\")\r\n      .required(\"Trip Description is required\"),\r\n    fldEstimateStartTime: yup\r\n      .string(\"Enter Estimate Start Time\")\r\n      .required(\"Estimate Start Time is required\"),\r\n    fldEstimateArrivalTime: yup\r\n      .string(\"Enter Estimate Arrival Time\")\r\n      .required(\"Estimate Arrival Time is required\"),\r\n    fldTripMember: yup.number().min(1).required(\"Trip Member is required\"),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Đăng ký chuyến đi\r\n      </Typography>\r\n      <Formik\r\n        initialValues={{\r\n          fldTripName: \"\",\r\n          fldTripBudget: null,\r\n          fldTripDescription: \"\",\r\n          fldEstimateStartTime: dayjs(Date.now()),\r\n          fldEstimateArrivalTime: dayjs(Date.now()),\r\n          fldTripMember: null,\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={async (values, { setErrors, setStatus }) => {\r\n          try {\r\n            setStatus({ success: false });\r\n            alert(JSON.stringify(values, null, 2));\r\n            const reponse = await tripApi.create(values);\r\n            if (reponse > 0) {\r\n              navigate(\"/admin/tripList\");\r\n              dispatch(\r\n                openAlert({ errorMsg: \"Create Trip Successed!\", open: true })\r\n              );\r\n            }\r\n          } catch (err) {\r\n            setStatus({ success: false });\r\n            setErrors({ submit: err.message });\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleSubmit,\r\n          values,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"fldTripName\"\r\n                  name=\"fldTripName\"\r\n                  label=\"Tên chuyến đi\"\r\n                  fullWidth\r\n                  variant=\"standard\"\r\n                  value={values.fldTripName}\r\n                  onChange={handleChange}\r\n                  error={Boolean(touched.fldTripName && errors.fldTripName)}\r\n                />\r\n                {touched.fldTripName && errors.fldTripName && (\r\n                  <FormHelperText\r\n                    error\r\n                    id=\"standard-weight-helper-text-fldTripName\"\r\n                  >\r\n                    {errors.fldTripName}\r\n                  </FormHelperText>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"fldTripBudget\"\r\n                  name=\"fldTripBudget\"\r\n                  label=\"Tên chuyến đi\"\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">VND</InputAdornment>\r\n                    ),\r\n                  }}\r\n                  variant=\"standard\"\r\n                  value={values.fldTripBudget}\r\n                  onChange={handleChange}\r\n                  error={Boolean(touched.fldTripBudget && errors.fldTripBudget)}\r\n                />\r\n                {touched.fldTripBudget && errors.fldTripBudget && (\r\n                  <FormHelperText\r\n                    error\r\n                    id=\"standard-weight-helper-text-fldTripName\"\r\n                  >\r\n                    {errors.fldTripBudget}\r\n                  </FormHelperText>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  id=\"fldTripDescription\"\r\n                  name=\"fldTripDescription\"\r\n                  label=\"Mô tả chuyến đi\"\r\n                  fullWidth\r\n                  autoComplete=\"\"\r\n                  variant=\"standard\"\r\n                  value={values.fldTripDescription}\r\n                  onChange={handleChange}\r\n                  error={Boolean(\r\n                    touched.fldTripDescription && errors.fldTripDescription\r\n                  )}\r\n                />\r\n                {touched.fldTripDescription && errors.fldTripDescription && (\r\n                  <FormHelperText\r\n                    error\r\n                    id=\"standard-weight-helper-fldTripDescription\"\r\n                  >\r\n                    {errors.fldTripDescription}\r\n                  </FormHelperText>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                  <DatePicker\r\n                    required\r\n                    sx={{\r\n                      \"& .MuiInputBase-root\": {\r\n                        paddingY: 1,\r\n                        paddingX: 3,\r\n                      },\r\n                      \"& .MuiFormLabel-root\": {\r\n                        paddingY: 1,\r\n                      },\r\n                    }}\r\n                    inputFormat=\"DD/MM/YYYY\"\r\n                    label=\"Thời gian bắt đầu dự tính\"\r\n                    id=\"fldEstimateStartTime\"\r\n                    name=\"fldEstimateStartTime\"\r\n                    fullWidth\r\n                    value={values.fldEstimateStartTime}\r\n                    onChange={(value) => {\r\n                      setFieldValue(\"fldEstimateStartTime\", value);\r\n                      console.log(value);\r\n                    }}\r\n                    error={Boolean(\r\n                      touched.fldEstimateStartTime &&\r\n                        errors.fldEstimateStartTime\r\n                    )}\r\n                  />\r\n                </LocalizationProvider>\r\n                {touched.fldEstimateStartTime &&\r\n                  errors.fldEstimateStartTime && (\r\n                    <FormHelperText\r\n                      error\r\n                      id=\"standard-weight-helper-fldEstimateStartTime\"\r\n                    >\r\n                      {errors.fldEstimateStartTime}\r\n                    </FormHelperText>\r\n                  )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                  <DatePicker\r\n                    required\r\n                    sx={{\r\n                      \"& .MuiInputBase-root\": {\r\n                        paddingY: 1,\r\n                        paddingX: 3,\r\n                      },\r\n                      \"& .MuiFormLabel-root\": {\r\n                        paddingY: 1,\r\n                      },\r\n                    }}\r\n                    inputFormat=\"DD/MM/YYYY\"\r\n                    id=\"fldEstimateArrivalTime\"\r\n                    name=\"fldEstimateArrivalTime\"\r\n                    label=\"Thời gian đến dự tính\"\r\n                    fullWidth\r\n                    value={values.fldEstimateArrivalTime}\r\n                    onChange={(value) =>\r\n                      setFieldValue(\"fldEstimateArrivalTime\", value)\r\n                    }\r\n                    error={Boolean(\r\n                      touched.fldEstimateArrivalTime &&\r\n                        errors.fldEstimateArrivalTime\r\n                    )}\r\n                  />\r\n                  {touched.fldEstimateArrivalTime &&\r\n                    errors.fldEstimateArrivalTime && (\r\n                      <FormHelperText\r\n                        error\r\n                        id=\"standard-weight-helper-fldEstimateArrivalTime\"\r\n                      >\r\n                        {errors.fldEstimateArrivalTime}\r\n                      </FormHelperText>\r\n                    )}\r\n                </LocalizationProvider>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  id=\"fldTripMember\"\r\n                  name=\"fldTripMember\"\r\n                  label=\"Số lượng thành viên\"\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  variant=\"standard\"\r\n                  value={values.fldTripMember}\r\n                  onChange={handleChange}\r\n                  error={Boolean(touched.fldTripMember && errors.fldTripMember)}\r\n                />\r\n                {touched.fldTripMember && errors.fldTripMember && (\r\n                  <FormHelperText\r\n                    error\r\n                    id=\"standard-weight-helper-fldTripMember\"\r\n                  >\r\n                    {errors.fldTripMember}\r\n                  </FormHelperText>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}></Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button variant=\"outlined\" onClick={gotoList}>\r\n                  Trở về danh sách\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} textAlign=\"right\">\r\n                <Button type=\"submit\" variant=\"outlined\">\r\n                  Đăng kí\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n"],"names":["UserCreate","navigate","useNavigate","dispatch","useAppDispatch","menu","useAppSelector","state","errorMsg","open","gotoList","openAlert","console","log","dayjs","Date","now","validationSchema","yup","shape","fldTripName","required","fldTripBudget","fldTripDescription","fldEstimateStartTime","fldEstimateArrivalTime","fldTripMember","min","_jsxs","_Fragment","children","_jsx","Typography","variant","gutterBottom","Formik","initialValues","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","setErrors","setStatus","wrap","_context","prev","next","success","alert","JSON","stringify","tripApi","sent","t0","submit","message","stop","_x","_x2","apply","arguments","_ref3","errors","touched","handleChange","handleSubmit","setFieldValue","Grid","container","spacing","item","xs","sm","TextField","id","name","label","fullWidth","value","onChange","error","Boolean","FormHelperText","InputProps","startAdornment","InputAdornment","position","autoComplete","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","sx","paddingY","paddingX","inputFormat","type","Button","onClick","textAlign"],"sourceRoot":""}