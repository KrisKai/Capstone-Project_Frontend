{"version":3,"file":"static/js/829.4c9613c0.chunk.js","mappings":"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","sources":["pages/admin/tripManagement/tripList.jsx"],"sourcesContent":["import { Box, Button, TextField } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { tripApi } from \"api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst columns = [\r\n  { id: \"tripName\", label: \"Trip Name\", minWidth: 100, onclick: true },\r\n  {\r\n    id: \"tripBudget\",\r\n    label: \"Trip Budget\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"endLocationName\",\r\n    label: \"Destination\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n  },\r\n  {\r\n    id: \"tripStatus\",\r\n    label: \"Trip Status\",\r\n    minWidth: 130,\r\n    align: \"center\",\r\n  },\r\n];\r\n\r\nexport default function StickyHeadTableTrip() {\r\n  let navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [deleteId, setDeleteId] = useState(\"\");\r\n  const [allTrips, setAllTrips] = useState({ listOfTrip: [], numOfTrip: 0 });\r\n  const [filter, setFilter] = useState({\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n    tripName: \"\",\r\n  });\r\n  const tripList = allTrips.listOfTrip;\r\n  const numberOfTrip = allTrips.numOfTrip;\r\n\r\n  const handleClickOpen = (e) => {\r\n    setOpen(true);\r\n    setDeleteId(e);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    // call api\r\n    setFilter({\r\n      ...filter,\r\n      tripName: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    setFilter({\r\n      ...filter,\r\n      tripName: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setFilter({\r\n      ...filter,\r\n      pageIndex: newPage,\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setFilter({\r\n      ...filter,\r\n      pageIndex: 0,\r\n      pageSize: +event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDetail = (id) => {\r\n    // detail\r\n    navigate(`/admin/tripDetail/${id}`);\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    // update\r\n    navigate(`/admin/tripUpdate/${id}`);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      // Remove trip API\r\n      const data = await tripApi.delete(deleteId || \"\");\r\n      switch (data.Code) {\r\n        case \"G001\":\r\n          return toast.error(data.Message);\r\n        case \"D001\":\r\n          return toast.error(data.Message);\r\n        default:\r\n          toast.success(\"Remove trip successfully!\");\r\n\r\n          // Trigger to re-fetch student list with current filter\r\n          const newFilter = { ...filter };\r\n          setFilter(newFilter);\r\n          setOpen(false);\r\n          setDeleteId(null);\r\n      }\r\n    } catch (error) {\r\n      // Toast error\r\n      console.log(\"Failed to fetch trip\", error);\r\n      if (error.response.status == 401) {\r\n        localStorage.removeItem(\"access_token\");\r\n        navigate(\"/auth/login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function gotoCreate() {\r\n    navigate(\"/admin/tripCreate\");\r\n  }\r\n\r\n  function gotoView(id) {\r\n    navigate(`/admin/tripView/${id}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getAllTrips() {\r\n      const response = await tripApi.getAll(filter);\r\n      setAllTrips(response);\r\n    }\r\n    getAllTrips();\r\n  }, [filter]);\r\n\r\n  return (\r\n    <>\r\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n        <Box sx={{ mt: 1, mb: 1 }} textAlign=\"right\">\r\n          <TextField\r\n            id=\"search\"\r\n            type=\"search\"\r\n            label=\"Search\"\r\n            value={searchTerm}\r\n            onChange={handleChange}\r\n            sx={{ width: 400 }}\r\n          />\r\n          <Button variant=\"outlined\" onClick={handleSearch} sx={{ height: 42 }}>\r\n            Search\r\n          </Button>\r\n        </Box>\r\n\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell key=\"detail\" align=\"center\">\r\n                  Show Detail\r\n                </TableCell>\r\n                <TableCell key=\"edit\" align=\"center\">\r\n                  Edit || Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {tripList.map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={row.tripId}\r\n                    key={row.tripId}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <>\r\n                          {column.onclick ? (\r\n                            <TableCell\r\n                              key={column.id}\r\n                              align={column.align}\r\n                              onClick={() => gotoView(row.tripId)}\r\n                              style={{ textDecoration: \"underline\" }}\r\n                            >\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          ) : (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    })}\r\n                    <TableCell key=\"detail\" align=\"center\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        value={row.tripId}\r\n                        onClick={(e) => handleDetail(e.target.value)}\r\n                        color=\"primary\"\r\n                      >\r\n                        About Trip\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell key=\"edit\" align=\"center\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        value={row.tripId}\r\n                        onClick={(e) => handleUpdate(e.target.value)}\r\n                        color=\"primary\"\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        value={row.tripId}\r\n                        onClick={(e) => handleClickOpen(e.target.value)}\r\n                        color=\"error\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={numberOfTrip}\r\n          rowsPerPage={filter.pageSize}\r\n          page={filter.pageIndex}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Box sx={{ mt: 2 }} textAlign=\"right\">\r\n        <Button variant=\"contained\" onClick={gotoCreate}>\r\n          Create\r\n        </Button>\r\n      </Box>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Do you want to delete this user?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={handleDelete}\r\n            autoFocus\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n"],"names":["columns","id","label","minWidth","onclick","align","format","value","toLocaleString","StickyHeadTableTrip","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","open","setOpen","_useState5","_useState6","deleteId","setDeleteId","_useState7","listOfTrip","numOfTrip","_useState8","allTrips","setAllTrips","_useState9","pageIndex","pageSize","tripName","_useState10","filter","setFilter","tripList","numberOfTrip","handleClose","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","newFilter","wrap","_context","prev","next","tripApi","sent","t0","Code","abrupt","toast","Message","_objectSpread","t1","console","log","response","status","localStorage","removeItem","stop","apply","arguments","useEffect","_getAllTrips","_callee2","_context2","getAllTrips","_jsxs","_Fragment","children","Paper","sx","width","overflow","Box","mt","mb","textAlign","_jsx","TextField","type","onChange","event","target","Button","variant","onClick","height","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","row","hover","role","tabIndex","tripId","concat","textDecoration","e","color","handleClickOpen","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","page","onPageChange","newPage","onRowsPerPageChange","Dialog","onClose","DialogTitle","DialogActions","autoFocus"],"sourceRoot":""}