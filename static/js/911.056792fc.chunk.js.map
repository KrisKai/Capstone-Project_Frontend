{"version":3,"file":"static/js/911.056792fc.chunk.js","mappings":"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","sources":["pages/admin/userManagement/userList.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { TextField, Button, Box } from \"@mui/material\";\r\n\r\n// assets\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nconst columns = [\r\n  { id: \"name\", label: \"Name\", minWidth: 170 },\r\n  { id: \"code\", label: \"ISO\\u00a0Code\", minWidth: 100 },\r\n  {\r\n    id: \"population\",\r\n    label: \"Population\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"size\",\r\n    label: \"Size (km\\u00b2)\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"density\",\r\n    label: \"Density\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nfunction gotoCreate() {\r\n  //go to create\r\n}\r\n\r\nconst rows = [\r\n  createData(\"India\", \"IN\", 1324171354, 3287263),\r\n  createData(\"China\", \"CN\", 1403500365, 9596961),\r\n  createData(\"Italy\", \"IT\", 60483973, 301340),\r\n  createData(\"United States\", \"US\", 327167434, 9833520),\r\n  createData(\"Canada\", \"CA\", 37602103, 9984670),\r\n  createData(\"Australia\", \"AU\", 25475400, 7692024),\r\n  createData(\"Germany\", \"DE\", 83019200, 357578),\r\n  createData(\"Ireland\", \"IE\", 4857000, 70273),\r\n  createData(\"Mexico\", \"MX\", 126577691, 1972550),\r\n  createData(\"Japan\", \"JP\", 126317000, 377973),\r\n  createData(\"France\", \"FR\", 67022000, 640679),\r\n  createData(\"United Kingdom\", \"GB\", 67545757, 242495),\r\n  createData(\"Russia\", \"RU\", 146793744, 17098246),\r\n  createData(\"Nigeria\", \"NG\", 200962417, 923768),\r\n  createData(\"Brazil\", \"BR\", 210147125, 8515767),\r\n];\r\n\r\nexport default function StickyHeadTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    // call api\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    // update\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    // delete\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n        <Box sx={{ mt: 1, mb: 1 }} textAlign=\"right\">\r\n          <TextField\r\n            id=\"search\"\r\n            type=\"search\"\r\n            label=\"Search\"\r\n            value={searchTerm}\r\n            onChange={handleChange}\r\n            sx={{ width: 400 }}\r\n          />\r\n          <Button variant=\"outlined\" onClick={handleSearch} right>\r\n            Search\r\n          </Button>\r\n        </Box>\r\n\r\n        <TableContainer sx={{ maxHeight: 440 }}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell key=\"edit\" align=\"center\">\r\n                  Edit || Delete\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={row.population}\r\n                      key={row.code}\r\n                    >\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value === \"number\"\r\n                              ? column.format(value)\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell key=\"edit\" align=\"center\">\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          onClick={() => handleUpdate(row.code)}\r\n                          color=\"primary\"\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          onClick={() => handleDelete(row.code)}\r\n                          color=\"secondary\"\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <Box sx={{ mt: 2 }} textAlign=\"right\">\r\n        <Button variant=\"outlined\" onClick={gotoCreate} right>\r\n          Create\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"],"names":["columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","gotoCreate","rows","StickyHeadTable","_React$useState","React","_React$useState2","_slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","searchTerm","setSearchTerm","_jsxs","_Fragment","children","Paper","sx","width","overflow","Box","mt","mb","textAlign","_jsx","TextField","type","onChange","event","target","Button","variant","onClick","right","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","slice","row","index","hover","role","tabIndex","color","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","newPage","onRowsPerPageChange"],"sourceRoot":""}